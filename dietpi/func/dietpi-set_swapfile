#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Function: swap file
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Location: /boot/dietpi/func/dietpi-set_swapfile
	# - Allows set the swap file size and path or disable it, based in input arguments, dietpi.txt entry, existing swap file or default, in that priority order.
	#
	# Usage:
	# - <empty>	= Print currently active swap locations from /proc/swaps
	# - $1		= swap file size [MiB] ("0" disables it, "1" enables it on low RAM devices to assure min 2048 MiB total memory)
	# - $2		= swap file path
	#////////////////////////////////////

	# Import DietPi-Globals --------------------------------------------------------------
	. /boot/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Set_swapfile'
	G_CHECK_ROOT_USER
	G_INIT
	# Import DietPi-Globals --------------------------------------------------------------

	EXIT_CODE=0

	# Check and apply valid input, else dietpi.txt entry, else current swap file, else revert to defaults
	# - Size
	if disable_error=1 G_CHECK_VALIDINT "$1"; then

		SWAP_SIZE=$1

	elif ! SWAP_SIZE=$(sed -n '/^[[:blank:]]*AUTO_SETUP_SWAPFILE_SIZE=/{s/^[^=]*=//p;q}' /boot/dietpi.txt) || ! disable_error=1 G_CHECK_VALIDINT "$SWAP_SIZE"; then

		SWAP_SIZE=$(mawk '$2=="file" {printf "%.0f",$3/1024;exit}' /proc/swaps) && disable_error=1 G_CHECK_VALIDINT "$SWAP_SIZE" || SWAP_SIZE=1

	fi
	# - Path: Store current saved and active paths for later use
	SWAP_PATH_CURRENT=$(sed -n '/^[[:blank:]]*AUTO_SETUP_SWAPFILE_LOCATION=/{s/^[^=]*=//p;q}' /boot/dietpi.txt)
	read -ra SWAP_FILES_ACTIVE < <(mawk '$2=="file" {print $1}' /proc/swaps)
	if [[ $2 == '/'* ]]; then

		SWAP_PATH=$2

	elif SWAP_PATH=$SWAP_PATH_CURRENT; [[ $SWAP_PATH != '/'* ]]; then

		SWAP_SIZE=$(mawk '$2=="file" {print $1;exit}' /proc/swaps) && [[ $2 == '/'* ]] || SWAP_PATH='/var/swap'

	fi

	Update_DietPi_Conf(){

		G_CONFIG_INJECT 'AUTO_SETUP_SWAPFILE_SIZE=' "AUTO_SETUP_SWAPFILE_SIZE=$SWAP_SIZE" /boot/dietpi.txt
		G_CONFIG_INJECT 'AUTO_SETUP_SWAPFILE_LOCATION=' "AUTO_SETUP_SWAPFILE_LOCATION=$SWAP_PATH" /boot/dietpi.txt

	}

	Update_Tmp(){

		# Set /tmp to 50% of RAM+SWAP: https://github.com/MichaIng/DietPi/issues/1027#issuecomment-369373082
		local tmp_size=$(( $(free -tm | mawk '/^Total:/{print $2;exit}') / 2 ))

		G_DIETPI-NOTIFY 2 "Setting /tmp tmpfs size: $tmp_size MiB"

		# Apply to existing fstab entry
		sed -i "/[[:blank:]]\/tmp[[:blank:]]/ctmpfs \/tmp tmpfs size=${tmp_size}M,noatime,lazytime,nodev,nosuid,mode=1777" /etc/fstab
		systemctl daemon-reload

		# Apply now to existing mount via "remount" to preserve current content and avoid doubled mount
		findmnt /tmp > /dev/null && G_EXEC mount -o remount /tmp

	}

	Swap_Disable(){

		G_DIETPI-NOTIFY 2 'Disabling and deleting all existing swap files'
		G_EXEC swapoff -a
		rm -fv "$SWAP_PATH_CURRENT" "${SWAP_FILES_ACTIVE[@]}"
		sed -i '/[[:blank:]]swap[[:blank:]]/d' /etc/fstab

	}

	# Create new swappey whappey
	Swap_Enable(){

		G_DIETPI-NOTIFY 0 'Generating new swap file'
		G_DIETPI-NOTIFY 2 "Size = $SWAP_SIZE MiB"
		G_DIETPI-NOTIFY 2 "Path = $SWAP_PATH"

		# Pre-allocate for filesystems which do no support quick-allocate with fallocate
		if [[ $SWAP_FS == 'f2fs' || $SWAP_FS == 'xfs' || $SWAP_FS == 'vfat' ]]; then

			G_EXEC dd if=/dev/zero of="$SWAP_PATH" bs=4K count=$(( $SWAP_SIZE * 1024 / 4 ))

		else

			G_EXEC fallocate -l $SWAP_SIZE'M' "$SWAP_PATH"

		fi

		G_EXEC mkswap "$SWAP_PATH"
		G_EXEC_NOHALT=1 G_EXEC chmod 600 "$SWAP_PATH" # Allow to fail on filesystems without UNIX permission support
		G_EXEC swapon "$SWAP_PATH"
		G_EXEC_NOHALT=1 G_EXEC eval "echo '$SWAP_PATH none swap sw' >> /etc/fstab" || EXIT_CODE=1 # R/O rootfs?

	}

	Error_Reset(){

		G_DIETPI-NOTIFY 1 "$*"
		G_DIETPI-NOTIFY 2 'Leaving swap file disabled'
		SWAP_SIZE=0 SWAP_PATH='/var/swap' EXIT_CODE=1

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	G_DIETPI-NOTIFY 3 "$G_PROGRAM_NAME" "Applying $SWAP_SIZE $SWAP_PATH"

	# Always reset existing swap files
	Swap_Disable

	# Auto size?
	(( $SWAP_SIZE == 1 )) && SWAP_SIZE=$(( 2048 - $(free -m | mawk '/^Mem:/{print $2;exit}') ))

	# Swap file dir and file system
	SWAP_DIR="${SWAP_PATH%/*}/"
	SWAP_FS=$(findmnt -no FSTYPE -T "$SWAP_DIR")

	# Disable
	if (( $SWAP_SIZE < 1 )); then

		SWAP_SIZE=0

	# Unsupported on Btrfs
	elif [[ $SWAP_FS == 'btrfs' ]]; then

		Error_Reset 'Swap files are not supported on Btrfs file system.'

	# Free spacey, checkey weckey
	elif ! G_CHECK_FREESPACE "$SWAP_DIR" $SWAP_SIZE; then

		Error_Reset 'Insufficient free space for desired swap files size'

	else

		Swap_Enable

	fi

	Update_DietPi_Conf
	Update_Tmp
	#-----------------------------------------------------------------------------------
	exit $EXIT_CODE
	#-----------------------------------------------------------------------------------
}
